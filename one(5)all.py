# coding: utf-8
import turtle


    # (1-я) функция side()  рисует ==только одну== сторону
    # "в себя" функция 'проглатывает' те переменные,
    # c которыми она будет работать:
def side(long1, color1, N1):   # long1 - это длина стороны, 
    turtle.color(color1)       # color1 - это цвет стороны
    turtle.forward(long1)      # N1  - это число сторон, которое будет
    turtle.left(360/N1)        # число сторон нужно для вычисления
                               # угла поворота

<<<<<<< HEAD
# =================
# -----------------
# !!! вот это (ниже) добавил через git 


    # (3-я) функция square_fill() - использует функцию square() внутри
    # (3-я) функция в зависимости от параметра рисует закрашенный
    # или не закрашенный многоугольник
    # если параметр fill равен 0 - то не закрашиваем,
    # если параметр fill не равен 0 - то закрашиваем (заливаем)
    #      текущим цветом
def square_fill(long3, color3, fill, N3):

    if fill == 0:                 # если равно нулю, то рисуем
       square(long3, color3, N3)  # многоугольник(квадрат) без заливки

    elif fill != 0:
    # else:
       turtle.begin_fill()
       square(long3, color3, N3)
       turtle.end_fill()

# !!! ниже примеры запуска функциии
# square_fill(150, 'red', 0, 12)  # 12-ти угольник незакрашенный
# square_fill(250, 'cyan', -5, 3) # треугольник закрашенный

# input()

=======

# -----------------
# !!! вот это (ниже) добавил через git 

    # (2-я) функция square() - использует функцию side() внутри
    # (2-я) функция рисует целый многоугольник (по-старому - квадрат)
def square(long2, color2, N2):  # то же, что и для side, те же значения
                                # long2 - это длина стороны,             
                                # color2 - это цвет стороны              
                                # N2  - это число сторон, которое на этот раз
    turtle.width(5)             # будет числом для range, ну и пойдет
                                # как параметр в вызов (т.е. запуск)
    for z in range(0, N2):      # функции side (и внутри ее 
          side(long2, color2, N2) # превратится в long1,color1,N1)
>>>>>>> 018228af6145f61f778eb3cdccdbfcd553946885


